{"version":3,"sources":["components/Input/Input.module.scss","api/api.js","toolkitRedux/todoSlice.js","utils/validation.js","components/Input/Input.jsx","App.jsx","reportWebVitals.js","toolkitRedux/commonSlice.js","toolkitRedux/index.js","index.js"],"names":["module","exports","instance","axios","baseURL","todos","get","catch","error","console","data","post","then","response","id","patch","delete","todoSlice","createSlice","name","initialState","entities","reducers","setEntities","state","action","payload","createEntity","push","updateEntity","map","entity","_id","deleteEntity","filter","actions","deleteAll","basicToDo","Yup","shape","title","required","min","description","color","matches","Input","type","errors","touched","isRequired","className","classes","inputContainer","signUp__label","signUp__name","signUp__name_text","signUp__name_red","signUp__inputField","classNames","signUp__input","signUp__input_error","App","dispatch","useDispatch","useState","setId","number","setNumber","initialValueFormik","setInitialValueFormik","resetFormik","todoList","useSelector","todo","deleteItem","useCallback","item","success","onDeleteAll","Promise","all","results","forEach","useEffect","initialValues","enableReinitialize","validationSchema","onSubmit","props","resetForm","onClick","index","style","backgroundColor","onEditData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","commonSlice","isConnectionLost","isStatusResponseShowed","statusResponseShowedText","showConnectionLost","hideConnectionLost","showStatusResponse","hideStatusResponse","changeStatusResponseText","rootReducer","combineReducers","common","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.568707e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"signUp__container\":\"Input_signUp__container__377fQ\",\"signUp__head\":\"Input_signUp__head__2JV0a\",\"signUp__head__link\":\"Input_signUp__head__link__2Ysbr\",\"signUp__head__link_active\":\"Input_signUp__head__link_active__zGK6I\",\"signUp__name\":\"Input_signUp__name__lUdTO\",\"signUp__name_red\":\"Input_signUp__name_red__osY6x\",\"signUp__label\":\"Input_signUp__label__-x7gk\",\"signUp__label_wrong\":\"Input_signUp__label_wrong__3UrbY\",\"signUp__input\":\"Input_signUp__input__2Hlla\",\"signUp__item\":\"Input_signUp__item__1UUAv\",\"signUp__inputField\":\"Input_signUp__inputField__2lr6d\",\"signUp__input_error\":\"Input_signUp__input_error__1Qpq4\",\"signUp__checkbox\":\"Input_signUp__checkbox__2T1Ed\",\"signUp__labelCriteria\":\"Input_signUp__labelCriteria__nm6bx\",\"signUp__button\":\"Input_signUp__button__Af3Bu\",\"rotate\":\"Input_rotate__2ikXV\",\"signUp__button_loading\":\"Input_signUp__button_loading__1__9U\",\"signUp__terms\":\"Input_signUp__terms__3g8yY\",\"terms__link\":\"Input_terms__link__1_DPi\",\"signUp__forgotPassword\":\"Input_signUp__forgotPassword__3sYJp\",\"rememberMe__label\":\"Input_rememberMe__label__BEytl\",\"forgotPasswordLink\":\"Input_forgotPasswordLink__11Sns\",\"rememberMe__checkbox\":\"Input_rememberMe__checkbox__213D_\",\"rememberMe__checkField\":\"Input_rememberMe__checkField__3SF8C\",\"rememberMe__check\":\"Input_rememberMe__check__24BJY\",\"signUp__routes\":\"Input_signUp__routes__2LBaP\",\"signUp__route\":\"Input_signUp__route__3D8bl\",\"error\":\"Input_error__52OzC\",\"inputContainer\":\"Input_inputContainer__2OzET\",\"inputContainer__toggleShowPassword\":\"Input_inputContainer__toggleShowPassword__SnOVd\",\"inputContainer__toggleShowPasswordIcon\":\"Input_inputContainer__toggleShowPasswordIcon__YPPRr\"};","import * as axios from 'axios'\r\n\r\nconst keyApi = 'SamvelHakobyan'\r\n\r\nconst instance = axios.create({\r\n  baseURL: `https://todo.eachbase.com/api/${keyApi}`,\r\n})\r\n\r\nexport const todos = {\r\n  getTodos() {\r\n    return instance.get('/todos').catch(error => {\r\n      console.error(error);\r\n      return []\r\n    })\r\n  },\r\n  createTodos(data) {\r\n    return instance.post('/todos', data)\r\n      .then((response) => response.data)\r\n      .catch((error) => {\r\n        console.error(error)\r\n        return false\r\n      })\r\n  },\r\n  updateTodo(id, data) {\r\n    return instance.patch(`/todos/${id}`, data)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      console.error(error);\r\n      return null;\r\n    })\r\n  },\r\n\r\n  async getTodoWithId(id) {\r\n    try {\r\n      const response = await instance.get(`/todos/${id}`)\r\n      return response.data\r\n    } catch (error) {\r\n      throw new Error(`get product with id ${error}`)\r\n    }\r\n  },\r\n\r\n  deleteById(id) {\r\n    return instance.delete(`/todos/${id}`)\r\n      .then(() => id)\r\n      .catch(error => {\r\n        console.error(error);\r\n        return false;\r\n      })\r\n  },\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst todoSlice = createSlice({\r\n  name: 'todo',\r\n  initialState: {\r\n    entities: [],\r\n  },\r\n  reducers: {\r\n    setEntities(state, action) {\r\n      state.entities = action.payload;\r\n    },\r\n    createEntity(state, action) {\r\n      state.entities.push(action.payload);\r\n    },\r\n    updateEntity(state, action) {\r\n      state.entities = state.entities.map(entity => action.payload._id === entity._id ? action.payload : entity);\r\n    },\r\n    deleteEntity(state, action) {\r\n      state.entities = state.entities.filter(entity => action.payload !== entity._id);\r\n    }\r\n  }\r\n})\r\n\r\nexport const { setEntities, createEntity, updateEntity, deleteEntity, deleteAll } = todoSlice.actions\r\nexport default todoSlice.reducer\r\n","import * as Yup from 'yup'\r\n\r\nconst regex = /.*^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$.*/\r\n\r\nconst basicToDo = Yup.object().shape({\r\n  title: Yup.string()\r\n    .required('required')\r\n    .min(2, 'Must be longer than 2 characters'),\r\n  description: Yup.string()\r\n    .required('required')\r\n    .min(2, 'Must be longer than 2 characters'),\r\n  color: Yup.string()\r\n    .required('required')\r\n    .matches(regex, 'not valid syntax')\r\n\r\n})\r\n\r\nexport {\r\n  basicToDo\r\n}\r\n","import classes from './Input.module.scss'\r\nimport { Field } from 'formik'\r\nimport classNames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Input = ({ type, name, errors, touched, isRequired, title }) => {\r\n\r\n  return (\r\n    <div className={classes.inputContainer}>\r\n      <label className={classes.signUp__label}>\r\n        <span className={classes.signUp__name}>\r\n          <span className={classes.signUp__name_text}>{title}</span>\r\n          {\r\n            isRequired &&\r\n            <span className={classes.signUp__name_red}>*</span>\r\n          }\r\n        </span>\r\n        <span className={classes.signUp__inputField}>\r\n          <Field name={name} type={type} className={classNames(\r\n            classes.signUp__input,\r\n            { [classes.signUp__input_error]: errors[name] && touched[name] })}\r\n          />\r\n          {\r\n            errors[name] && touched[name] &&\r\n            <span className={classes.error}>{errors[name]}</span>\r\n          }\r\n        </span>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nInput.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  isRequired: PropTypes.bool.isRequired,\r\n  errors: PropTypes.any,\r\n  touched: PropTypes.any,\r\n}\r\n\r\nexport default Input\r\n","import { useState, useEffect, useCallback } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport './App.scss'\r\nimport { todos } from './api/api'\r\nimport { createEntity, deleteEntity, setEntities, updateEntity } from './toolkitRedux/todoSlice';\r\nimport { Form, Formik } from 'formik'\r\nimport { basicToDo } from './utils/validation'\r\nimport Input from './components/Input/Input'\r\n\r\nexport function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [id, setId] = useState(null)\r\n  const [number, setNumber] = useState('')\r\n  const [initialValueFormik, setInitialValueFormik] = useState({\r\n    title: '',\r\n    description: '',\r\n    color: '',\r\n  })\r\n\r\n  const onEditData = (data, index) => {\r\n    setId(data._id)\r\n    setNumber(index)\r\n    setInitialValueFormik({\r\n      title: data.title,\r\n      description: data.description,\r\n      color: data.color\r\n    })\r\n  }\r\n\r\n  const resetFormik = () => {\r\n    setInitialValueFormik({\r\n      title: '',\r\n      description: '',\r\n      color: ''\r\n    })\r\n  }\r\n\r\n  const todoList = useSelector(({ todo }) => todo.entities);\r\n\r\n\r\n  const deleteItem = useCallback((item) => {\r\n    todos.deleteById(item._id).then(success => {\r\n      if (success) {\r\n        dispatch(deleteEntity(item._id));\r\n      } else {\r\n        // todo show error\r\n      }\r\n    })\r\n  }, [dispatch]);\r\n\r\n  const onDeleteAll = useCallback(() => {\r\n    Promise.all(\r\n      todoList.map(item => todos.deleteById(item._id))\r\n    ).then(results => {\r\n      results.forEach(id => dispatch(deleteEntity(id)))\r\n    });\r\n  }, [todoList ,dispatch]);\r\n\r\n  useEffect(() => {\r\n    todos.getTodos()\r\n      .then(response => {\r\n        dispatch(setEntities(response.data))\r\n      });\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <div className='column1'>\r\n        <Formik\r\n          initialValues={initialValueFormik}\r\n          enableReinitialize={initialValueFormik}\r\n          validationSchema={basicToDo}\r\n          onSubmit={({ title, description, color}, props) => {\r\n\r\n            const data = { title, description, color };\r\n\r\n\r\n            if (id) {\r\n              todos.updateTodo(id, data)\r\n                .then(item => {\r\n                  if (item) {\r\n                    dispatch(updateEntity(item));\r\n                    setId(null)\r\n                    resetFormik()\r\n                  } else {\r\n                    // todo show error\r\n                  }\r\n                })\r\n            } else {\r\n              todos.createTodos(data)\r\n                .then(item => {\r\n                  if (item) {\r\n                    dispatch(createEntity(item));\r\n                    props.resetForm()\r\n                  } else {\r\n                    // todo show error\r\n                  }\r\n                })\r\n            }\r\n          }}\r\n        >\r\n          {\r\n            ({ errors, touched }) => (\r\n              <Form>\r\n                <Input isRequired={true} name={'title'} title={'title'} type={'text'} errors={errors} touched={touched}/>\r\n                <Input isRequired={true} name={'description'} title={'description'} type={'text'} errors={errors} touched={touched}/>\r\n                <Input isRequired={true} name={'color'} title={'color only hex e.g. #ff1122 or #f32'} type={'text'} errors={errors} touched={touched}/>\r\n                <button type='submit'>{\r\n                  !id ? 'Create to do' : `Update ${number}`\r\n                }</button>\r\n              </Form>\r\n            )\r\n          }\r\n        </Formik>\r\n        <div>\r\n          <button type='button' onClick={onDeleteAll}>Delete All</button>\r\n          {id && <button onClick={() => {\r\n            setId(null)\r\n            setNumber(null)\r\n            resetFormik()\r\n          }}>Create</button>}\r\n        </div>\r\n      </div>\r\n      <div className='column2'>\r\n        <ul className='todoList'>\r\n          {\r\n            todoList.map((item, index) => (\r\n              <li key={item._id} className='todoItem' style={{\r\n                backgroundColor: `${item.color}` || '#ffffff'\r\n              }}>\r\n                <div>\r\n                  {++index}\r\n                </div>\r\n                <div className='todoItem__info'>\r\n                  <span>title --- {item.title}</span>\r\n                  {' '}\r\n                  <span>description --- {item.description}</span>\r\n                  {' '}\r\n                  <span>color --- {item.color}</span>\r\n                </div>\r\n                <div className='todoControls'>\r\n                  <button className='btn' type='button' onClick={() => onEditData(item, index)}>\r\n                    <span>edit</span>\r\n                  </button>\r\n                  <button className='btn btn__delete' type='button' onClick={() => deleteItem(item)}>\r\n                    <span>delete</span>\r\n                  </button>\r\n                </div>\r\n              </li>\r\n            ))\r\n          }\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst commonSlice = createSlice({\r\n  name: 'common',\r\n  initialState: {\r\n    isConnectionLost: false,\r\n    isStatusResponseShowed: false,\r\n    statusResponseShowedText: '',\r\n  },\r\n  reducers: {\r\n    showConnectionLost(state) {\r\n      state.isConnectionLost = true\r\n    },\r\n    hideConnectionLost(state) {\r\n      state.isConnectionLost = false\r\n    },\r\n    showStatusResponse(state) {\r\n      state.isStatusResponseShowed = true\r\n    },\r\n    hideStatusResponse(state) {\r\n      state.isStatusResponseShowed = false\r\n    },\r\n    changeStatusResponseText(state, action) {\r\n      state.statusResponseShowedText = action.payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const {showConnectionLost, hideConnectionLost, showStatusResponse, hideStatusResponse, changeStatusResponseText} = commonSlice.actions\r\nexport default commonSlice.reducer\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit'\r\nimport commonSlice from './commonSlice'\r\nimport todoSlice from './todoSlice'\r\n\r\nconst rootReducer = combineReducers({\r\n  common: commonSlice,\r\n  todo: todoSlice,\r\n})\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n})\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport { App } from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './toolkitRedux/index'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}